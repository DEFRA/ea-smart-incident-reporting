<Activity mc:Ignorable="sap sap2010" x:Class="InitAllSettingsAPI" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sma="clr-namespace:System.Management.Automation;assembly=System.Management.Automation" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Dictionary of all assets retrieved from Orchestrator." Name="out_Config" Type="OutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary of all credential assets retrieved from Orchestrator." Name="out_Credentials" Type="OutArgument(scg:Dictionary(x:String, sma:PSCredential))" />
    <x:Property sap2010:Annotation.AnnotationText="List of Orchestrator folders to retrieve assets/credentials from. The list should be separated by the &quot;,&quot; character. " Name="in_OrchestratorFolders" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Boolean to determine if credentials should be received and output in a dictionary." Name="in_RetrieveCredentials" Type="InArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1341,2868</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>InitAllSettingsAPI_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="38">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>Microsoft.Activities</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Runtime.CompilerServices</x:String>
      <x:String>System.Management.Automation</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="76">
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Runtime.CompilerServices.Unsafe</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Threading.Tasks.Extensions</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This workflow retrieves all the assets from each folder listed in the in_OrchestratorFolders array. Credentials can also be retrieved if desired" DisplayName="InitAllSettingsAPI" sap:VirtualizedContainerService.HintSize="1351,2843" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="intStatusCode" />
      <Variable x:TypeArguments="x:String" Name="strJson" />
      <Variable x:TypeArguments="njl:JObject" Name="objJson" />
      <Variable x:TypeArguments="njl:JArray" Name="arrJson" />
      <Variable x:TypeArguments="x:String" Name="strUser" />
      <Variable x:TypeArguments="x:String" Name="strError" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:MultipleAssign DisplayName="Initialise Dictionaries" sap:VirtualizedContainerService.HintSize="1309,131" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[out_Config]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[new Dictionary(Of String, Object)]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="scg:Dictionary(x:String, sma:PSCredential)">[out_Credentials]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, sma:PSCredential)">[new Dictionary(Of String, PSCredential)]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each Orchestrator Folder" sap:VirtualizedContainerService.HintSize="1309,2549" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[in_OrchestratorFolders.Split(&quot;,&quot;c)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="folder" />
          </ActivityAction.Argument>
          <Sequence sap2010:Annotation.AnnotationText="For more info, refer to https://cloud.uipath.com/DRACOE/Production/swagger/index.html#/Assets" DisplayName="Retrieve Assets" sap:VirtualizedContainerService.HintSize="1273,2425" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Trim folder name" sap:VirtualizedContainerService.HintSize="1231,60" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[folder]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[folder.Trim]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1231,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Retrieving assets from: &quot;+folder]" />
            <ui:OrchestratorHttpRequest JSONPayload="{x:Null}" ResponseHeaders="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="/swagger/index.html#/Assets/Assets_GetFiltered" DisplayName="Orchestrator HTTP Request" FolderPath="[folder]" sap:VirtualizedContainerService.HintSize="1231,64" sap2010:WorkflowViewState.IdRef="OrchestratorHttpRequest_1" Method="GET" RelativeEndpoint="/odata/Assets/UiPath.Server.Configuration.OData.GetFiltered" Result="[strJson]" StatusCode="[intStatusCode]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:OrchestratorHttpRequest>
            <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON Response" sap:VirtualizedContainerService.HintSize="1231,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[objJson]" JsonString="[strJson]" />
            <If sap2010:Annotation.AnnotationText="The status code 200 indicates a success, so other status codes (e.g. 400) indicate that an error occurred" Condition="[intStatusCode &lt;&gt; 200]" DisplayName="If the API call failed" sap:VirtualizedContainerService.HintSize="1231,646" sap2010:WorkflowViewState.IdRef="If_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Throw System Exception" sap:VirtualizedContainerService.HintSize="376,417" sap2010:WorkflowViewState.IdRef="Sequence_11">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap2010:Annotation.AnnotationText="The error code logged here is not the HTTP status code, (e.g. 200 or 400) but rather the &quot;errorCode&quot; property of the JSON response" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="Assign_1">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strError]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["The Orchestrator API call to retrieve assets from "+folder+" failed. Error code: "+objJson("errorCode").ToString+", Message: "+objJson("message").ToString]</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Error" Message="[strError]" />
                  <Throw Exception="[New SystemException(strError)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
                </Sequence>
              </If.Then>
            </If>
            <ui:DeserializeJsonArray sap2010:Annotation.AnnotationText="The &quot;value&quot; propery of the JSON response is an array of assets, so get these assets as a JArray" DisplayName="Deserialize JSON Array" sap:VirtualizedContainerService.HintSize="1231,102" sap2010:WorkflowViewState.IdRef="DeserializeJsonArray_1" JsonArray="[arrJson]" JsonString="[objJson(&quot;value&quot;).ToString]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:DeserializeJsonArray>
            <ui:ForEach x:TypeArguments="njl:JObject" CurrentIndex="{x:Null}" DisplayName="For Each asset in JArray" sap:VirtualizedContainerService.HintSize="1231,908" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[arrJson]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="njl:JObject">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="njl:JObject" Name="asset" />
                  </ActivityAction.Argument>
                  <Flowchart sap2010:Annotation.AnnotationText="If the asset is not credential, then store it as GenericValue in config dictionary&#xA;If the asset is credential, then store in credential dictionary, unless in_GrabCredentials is set to False" DisplayName="Store in dictionary" sap:VirtualizedContainerService.HintSize="1195,784" sap2010:WorkflowViewState.IdRef="Flowchart_3">
                    <Flowchart.Variables>
                      <Variable x:TypeArguments="ss:SecureString" Name="strPass" />
                      <Variable x:TypeArguments="x:String" Name="strAsset" />
                    </Flowchart.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <av:Point x:Key="ShapeLocation">420,12.5</av:Point>
                        <av:Size x:Key="ShapeSize">60,75</av:Size>
                        <x:Double x:Key="Width">1161</x:Double>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Double x:Key="Height">706.333333333333</x:Double>
                        <av:PointCollection x:Key="ConnectorLocation">450,87.5 450,146.5</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Flowchart.StartNode>
                      <x:Reference>__ReferenceID8</x:Reference>
                    </Flowchart.StartNode>
                    <FlowDecision x:Name="__ReferenceID8" Condition="[asset(&quot;ValueType&quot;).ToString.Equals(&quot;Credential&quot;)]" DisplayName="Is Asset a Credential?" sap:VirtualizedContainerService.HintSize="116,87" sap2010:WorkflowViewState.IdRef="FlowDecision_6">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <av:Point x:Key="ShapeLocation">392,146.5</av:Point>
                          <av:Size x:Key="ShapeSize">116,87</av:Size>
                          <av:PointCollection x:Key="FalseConnector">508,190 880,190 880,236.5</av:PointCollection>
                          <av:PointCollection x:Key="TrueConnector">392,190 250,190 250,356.5</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <FlowDecision.True>
                        <FlowDecision x:Name="__ReferenceID0" Condition="[in_RetrieveCredentials]" DisplayName="Retrieve Credentials?" sap:VirtualizedContainerService.HintSize="115,87" sap2010:WorkflowViewState.IdRef="FlowDecision_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <av:Point x:Key="ShapeLocation">192.5,356.5</av:Point>
                              <av:Size x:Key="ShapeSize">115,87</av:Size>
                              <av:PointCollection x:Key="TrueConnector">192.5,400 130,400 130,504.5</av:PointCollection>
                              <av:PointCollection x:Key="FalseConnector">307.5,400 440,400 440,474</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <FlowDecision.True>
                            <FlowStep x:Name="__ReferenceID1">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">30,504.5</av:Point>
                                  <av:Size x:Key="ShapeSize">200,51</av:Size>
                                  <av:PointCollection x:Key="ConnectorLocation">130,555.5 130,585.5 131,585.5 131,620</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[asset(&quot;Name&quot;).ToString]" DisplayName="Retrieve Credential" FolderPath="[folder]" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="GetRobotCredential_8" Password="[strPass]" Username="[strUser]" />
                              <FlowStep.Next>
                                <FlowStep x:Name="__ReferenceID4">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">0,620</av:Point>
                                      <av:Size x:Key="ShapeSize">262,60</av:Size>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Add Credential key/value pair" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="sma:PSCredential">[out_Credentials(asset("Name").ToString)]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="sma:PSCredential">[new PSCredential(strUser, strPass)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </FlowStep>
                              </FlowStep.Next>
                            </FlowStep>
                          </FlowDecision.True>
                          <FlowDecision.False>
                            <FlowStep x:Name="__ReferenceID2">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">273,474</av:Point>
                                  <av:Size x:Key="ShapeSize">334,112</av:Size>
                                  <av:PointCollection x:Key="ConnectorLocation">420,526.666666666667 420,576.666666666667</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:Comment sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="Comment_4" Text="// If in_RetrieveCredentials is False, then this workflow will not retrieve credentials. Instead, use Get Credential activities wherever you need them in your automation">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:Comment>
                            </FlowStep>
                          </FlowDecision.False>
                        </FlowDecision>
                      </FlowDecision.True>
                      <FlowDecision.False>
                        <FlowDecision x:Name="__ReferenceID5" Condition="[asset(&quot;ValueScope&quot;).ToString.Equals(&quot;PerRobot&quot;)]" DisplayName="Value PerRobot?" sap:VirtualizedContainerService.HintSize="91,87" sap2010:WorkflowViewState.IdRef="FlowDecision_8">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <av:Point x:Key="ShapeLocation">834.5,236.5</av:Point>
                              <av:Size x:Key="ShapeSize">91,87</av:Size>
                              <av:PointCollection x:Key="FalseConnector">925.5,280 1030,280 1030,360</av:PointCollection>
                              <av:PointCollection x:Key="TrueConnector">834.5,280 760,280 760,364.02</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <FlowDecision.True>
                            <FlowStep x:Name="__ReferenceID6">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">660,364.02</av:Point>
                                  <av:Size x:Key="ShapeSize">200,51</av:Size>
                                  <av:PointCollection x:Key="ConnectorLocation">760,415.02 760,465.02</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="[asset(&quot;Name&quot;).ToString]" DisplayName="Get Asset" FolderPath="[folder]" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
                                <ui:GetRobotAsset.Value>
                                  <OutArgument x:TypeArguments="x:String">[strAsset]</OutArgument>
                                </ui:GetRobotAsset.Value>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:GetRobotAsset>
                              <FlowStep.Next>
                                <FlowStep x:Name="__ReferenceID7">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">629,465.02</av:Point>
                                      <av:Size x:Key="ShapeSize">262,60</av:Size>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Add Config key/value pair" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Object">[out_Config(asset("Name").ToString)]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[strAsset]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </FlowStep>
                              </FlowStep.Next>
                            </FlowStep>
                          </FlowDecision.True>
                          <FlowDecision.False>
                            <FlowStep x:Name="__ReferenceID3">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">899,360</av:Point>
                                  <av:Size x:Key="ShapeSize">262,60</av:Size>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Add Config key/value pair" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[out_Config(asset("Name").ToString)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[asset("Value").ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </FlowStep>
                          </FlowDecision.False>
                        </FlowDecision>
                      </FlowDecision.False>
                    </FlowDecision>
                    <x:Reference>__ReferenceID0</x:Reference>
                    <x:Reference>__ReferenceID1</x:Reference>
                    <x:Reference>__ReferenceID2</x:Reference>
                    <x:Reference>__ReferenceID3</x:Reference>
                    <x:Reference>__ReferenceID4</x:Reference>
                    <x:Reference>__ReferenceID5</x:Reference>
                    <x:Reference>__ReferenceID6</x:Reference>
                    <x:Reference>__ReferenceID7</x:Reference>
                  </Flowchart>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1231,91" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Finished retrieving assets from: &quot;+folder]" />
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
  </Sequence>
</Activity>